@page "/adminclasses"


@using BlazorApp.Client.Services.ClassesService


@inject HttpClient Http
@inject IClassesService ClassService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS


<!-- ======= Header ======= -->
<header id="header" class="fixed-top d-flex justify-content-center align-items-center">

    <nav id="navbar" class="navbar @NavMenuCssClass">
        <ul>
            <li><a class="nav-link scrollto" href="/admin">Admin Home</a></li>
        </ul>
        <i class="bi bi-list mobile-nav-toggle" @onclick="ToggleNavMenu"></i>
    </nav><!-- .navbar -->

</header><!-- End Header -->


<section id="admin-links" class="" style="margin-top:1em">
    <div class="container">
        <div class="info-box" style="color: #444444;text-align: center;box-shadow: 0 0 30px rgba(214, 215, 216, 0.6);padding: 20px 0 30px 0;">
            <h3>Admin Classes</h3>
            <div class="table-responsive">

                <table class="table table-striped table-hover table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Date</th>
                            <th>Location</th>
                            <th>Price</th>
                            <th>Landing page</th>
                            <th>Weekly</th>
                            <th>Special Notes</th>
                            <th>Active</th>
                            <th></th>
                        </tr>
                    </thead>

                    @if (ClassService.Classes == null || ClassService.Classes.Count == 0)
                    {
                        <img src="/assets/img/Loading_2.gif">

                    }
                    else
                    {
                        <tbody>

                            @foreach (var cl in ClassService.Classes)
                            {
                                <tr>
                                    <td>
                                        @CheckNull(cl.Name, "None Set")
                                    </td>

                                    <td>@cl.Date</td>
                                    <td>@CheckNull(cl.Location, "None Set")</td>
                                    <td>@CheckNull(cl.Price, 0)</td>
                                    <td>@cl.DisplayOnLandingPage</td>
                                    <td>@cl.WeeklyRecurring</td>
                                    <td>@cl.SpecialNotes</td>
                                    <td>@cl.Active</td>
                                    <td>
                                        <button class="btn btn-primary"
                                                @onclick="(() => ShowCourse(cl.Id))">
                                            <i class="oi oi-pencil"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    }
                </table>


            </div>
        </div>
    </div>
</section>




    

@code {

    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? null : "navbar-mobile";

    private string @CloseMenuCssClass => collapseNavMenu ? "d-none" : "d-flex";

    protected override void OnInitialized()
    {
        ClassService.ClassesChanged += StateHasChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await ClassService.GetClasses();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

    private T CheckNull<T>(T value, T defaultValue)
    {
        return value == null ? defaultValue : value;
    }

    void ShowCourse(string id)
    {
        NavigationManager.NavigateTo($"adminclass/{id}");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
